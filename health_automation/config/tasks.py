from crewai import Task

from health_automation.tools.notion_tool import fetch_notion_supplements
from health_automation.tools.pubmed_tool import search_pubmed
from health_automation.tools.google_search_tool import search_best_supplements
from health_automation.tools.email_tool import send_health_report_tool

from health_automation.config.agents import analysis_agent, research_agent, email_agent  # Importa os agentes

from health_automation.llm_setup.checkpoint_manager import get_checkpoint, save_checkpoint


def create_task(name, description, expected_output, agent, tools=[]):
    if get_checkpoint(name):  # üîπ Se j√° foi conclu√≠da, pula
        print(f"‚úÖ [CHECKPOINT] Tarefa '{name}' j√° conclu√≠da. Pulando...")
        return None
    return Task(
        description=description,
        expected_output=expected_output,
        agent=agent,
        tools=tools
    )

# üîπ Tarefa: Analisar Suplementa√ß√£o
analyze_supplementation = create_task("analyze_supplementation",
    description=(
        "Analise a tabela de suplementa√ß√£o do Notion e verifique:\n"
        "- Se h√° intera√ß√µes negativas entre suplementos e medicamentos.\n"
        "- Se a ingest√£o est√° alinhada com recomenda√ß√µes cient√≠ficas.\n"
        "- Se h√° sugest√µes para melhorar a rotina de suplementa√ß√£o."
    ),
    expected_output=(
        "Um relat√≥rio estruturado com:\n"
        "- Lista de suplementos e medicamentos analisados.\n"
        "- Poss√≠veis intera√ß√µes negativas.\n"
        "- Sugest√µes de ajustes na rotina de consumo.\n"
        "- Refor√ßo sobre quais suplementos s√£o essenciais."
    ),
    tools=[fetch_notion_supplements],
    agent=analysis_agent
)

# üîπ Tarefa: Pesquisar Melhores Suplementos
research_best_supplements = create_task(
    "research_best_supplements",
    description=(
        "Pesquise por suplementos de melhor qualidade e custo-benef√≠cio, considerando:\n"
        "- Op√ß√µes que combinem m√∫ltiplas vitaminas em um s√≥ produto.\n"
        "- Redu√ß√£o na quantidade de c√°psulas ingeridas.\n"
        "- Compara√ß√£o de pre√ßos e marcas confi√°veis."
    ),
    expected_output=(
        "Uma lista estruturada com:\n"
        "- Suplementos recomendados com base em qualidade e custo.\n"
        "- Op√ß√µes que reduzem a quantidade de c√°psulas.\n"
        "- Links para compra dos produtos recomendados."
    ),
    tools=[search_pubmed, search_best_supplements],
    agent=research_agent
)

# üîπ Tarefa: Enviar Relat√≥rio de Suplementa√ß√£o
send_supplementation_report = create_task(
    "send_supplementation_report",
    description=(
        "Envie um e-mail com um relat√≥rio estruturado contendo:\n"
        "- A an√°lise do `Analysis Agent` sobre a suplementa√ß√£o.\n"
        "- A pesquisa do `Research Agent` sobre melhores suplementos e pre√ßos.\n"
        "- Sugest√µes de ajustes na rotina de ingest√£o.\n"
        "- Op√ß√µes de compra e links para os suplementos recomendados."
    ),
    expected_output=(
        "Um e-mail bem formatado, contendo:\n"
        "- A an√°lise detalhada da combina√ß√£o de suplementos.\n"
        "- Recomenda√ß√µes de suplementos mais eficientes e econ√¥micos.\n"
        "- Links confi√°veis para compra dos produtos."
    ),
    tools=[send_health_report_tool],
    agent=email_agent
)

# üîπ Lista de Tarefas para Importa√ß√£o F√°cil
tasks = [task for task in [analyze_supplementation, research_best_supplements, send_supplementation_report] if task]
